var scrypt = require("../../lib/scrypt.js");
var controllers = {};
/*
 _______          _   _             
|__   __|        | \ | |            
   | | ___  _ __ |  \| | __ ___   __
   | |/ _ \| '_ \| . ` |/ _` \ \ / /
   | | (_) | |_) | |\  | (_| |\ V / 
   |_|\___/| .__/|_| \_|\__,_| \_/  
           | |                      
           |_|                      
*/
controllers.topNav = function ($scope, $window, socket, handshakeConstant) {
  $scope.var0 = 0;
    var menuUp = false;
  socket.on('restricted', 'recieve login', function() {
    console.log('Called recieve login');
    $scope.var0 = 1;      
  });
  $(".topnavOptionsMenu").hide();
  $(".topnavOptionsButton").hover( function() {
    $(".topnavOptionsMenu").css("top", "40px");
    $(".topnavOptionsMenu").css("left", $(this).offset().left);
    $(".topnavOptionsMenu").show();
  }, function() {
    $(".topnavOptionsMenu").hide();
  })

  $(".topnavOptionsMenu").hover( function() {
    $(".topnavOptionsMenu").show();
  },function() {
    $(this).hide();
  });
  };
/*
 _____            __ _ _      
|  __ \          / _(_) |     
| |__) | __ ___ | |_ _| | ___ 
|  ___/ '__/ _ \|  _| | |/ _ \
| |   | | | (_) | | | | |  __/
|_|   |_|  \___/|_| |_|_|\___|
*/
controllers.profileView = function ($scope, $window, socket) {
  socket.emit('request profile');
  socket.on('public', 'recieve profile',function(data) {
    $scope.message;
    $scope.user ={
      username : data.user.username,
      fullname : data.user.fullname,
      shortbio : data.user.shortbio,
      location : data.user.location,
      email : data.user.email,
      phonenumber : data.user.phonenumber,
      website : data.user.website,
    };
    //$scope.$digest();
  });

};
/*
 _                 _       
| |               (_)      
| |     ___   __ _ _ _ __  
| |    / _ \ / _` | | '_ \ 
| |___| (_) | (_| | | | | |
|______\___/ \__, |_|_| |_|
              __/ |        
             |___/         
*/
controllers.loginModalWindow = function ($scope, socket, $timeout, $http, $location) {
  $scope.login = {
    username : '',
    password : ''
  };

  socket.on('public', 'recieve token', function(token) {
    socket.emit('restricted', 'authenticate', token);
    localStorage["token"] = token;
    $scope.$root.$broadcast('loginModalWindowClose');
    $location.path('/:' + $scope.login.username);   
  });


  $scope.submit = function() {
    // server-side
    $scope.login.password = scrypt.crypto_scrypt(scrypt.encode_utf8($scope.login.username), scrypt.encode_utf8($scope.login.password), 128, 8, 1, 32);
    $scope.login.password = scrypt.to_hex($scope.login.password);
    console.log($scope.login);
    socket.emit('public', 'request login', $scope.login);

  };
    
  $scope.forgotReset = function() {
    $scope.$root.$broadcast('loginModalWindowSwap');
    $timeout(function() {$scope.$root.$broadcast('forgotResetModalWindowOpen');}, 300);
  };

  $scope.register = function() {
    $scope.$root.$broadcast('loginModalWindowSwap');
    $timeout(function() {$scope.$root.$broadcast('registerModalWindowOpen');}, 300);
  }; 
};
/*
 _____            _     _            
|  __ \          (_)   | |           
| |__) |___  __ _ _ ___| |_ ___ _ __ 
|  _  // _ \/ _` | / __| __/ _ \ '__|
| | \ \  __/ (_| | \__ \ ||  __/ |   
|_|  \_\___|\__, |_|___/\__\___|_|   
             __/ |                   
            |___/                    
*/
controllers.registerModalWindow = function ($scope, $location, socket, $timeout, $http) {
  $scope.newuser= {
    username : '',
    email : '',
    password : '',
    password2 : '',
    levelAuthority : ''
  };

  $scope.hideLevelAuthority = false;
  $scope.showLevelAuthority = false;
  $scope.error=false;

  $scope.submit = function() {
    if ($scope.newuser.password === $scope.newuser.password2) {
        $scope.newuser.password = scrypt.crypto_scrypt(scrypt.encode_utf8($scope.newuser.username), scrypt.encode_utf8($scope.newuser.password), 128, 8, 1, 32);
        $scope.newuser.password = scrypt.to_hex($scope.newuser.password);
        $scope.newuser.password2 = "";
        socket.emit('public', 'request register user', $scope.newuser);
        $scope.newuser.password = "";
    };    
  }; 

  socket.on('public', 'recieve register user successful', function(token) {
    //store the header data in a variable 
    localStorage["token"] = token;

  });
  socket.on('public', 'recieve register user rejected',function(data) {
    console.log('rejected'+ data);
    $scope.error = data;
    $scope.$digest();
  });
    $scope.showLevelAuthorityDiv = function() {
      $scope.hideLevelAuthority = true;
      $scope.showLevelAuthority = true;
    };
    $scope.hideLevelAuthorityDiv = function() {
      $scope.hideLevelAuthority = false;
      $scope.showLevelAuthority = false;
    };
};
/*
 ______                    _   _____                _   
|  ____|                  | | |  __ \              | |  
| |__ ___  _ __ __ _  ___ | |_| |__) |___  ___  ___| |_ 
|  __/ _ \| '__/ _` |/ _ \| __|  _  // _ \/ __|/ _ \ __|
| | | (_) | | | (_| | (_) | |_| | \ \  __/\__ \  __/ |_ 
|_|  \___/|_|  \__, |\___/ \__|_|  \_\___||___/\___|\__|
                __/ |                                   
               |___/                                    
*/
controllers.forgotResetModalWindow = function ($scope, $window, socket, $timeout) {
   $scope.login = function() {
      $scope.$root.$broadcast('forgotResetModalWindowSwap');
      $timeout(function() {$scope.$root.$broadcast('loginModalWindowOpen');}, 300);
    };
  $scope.submit = function() {
      alert();
    };
};
/*
 _                     _ _             _____                 
| |                   | (_)           |  __ \                
| |     __ _ _ __   __| |_ _ __   __ _| |__) |_ _  __ _  ___ 
| |    / _` | '_ \ / _` | | '_ \ / _` |  ___/ _` |/ _` |/ _ \
| |___| (_| | | | | (_| | | | | | (_| | |  | (_| | (_| |  __/
|______\__,_|_| |_|\__,_|_|_| |_|\__, |_|   \__,_|\__, |\___|
                                  __/ |            __/ |     
                                 |___/            |___/      
*/
controllers.landingPage = function ($scope, $window, socket) {
  $scope.loginModalWindow = {
      html: '<form ng-submit="submit()" ng-controller="loginModalWindow"><span>Username:</span> <br/> <input type="text" ng-model="login.username" placeholder="Username"/> <br/><span>Password:</span> <br/> <input type="password" ng-model="login.password" placeholder="Password"/> <br/> <input type="submit" value="Submit"/> <br/><span ng-click="forgotReset()" class="forgotReset">Forgot / Reset Password</span> <br/><span ng-click="register()" class="register">Need an account? Go register.</span></form>',
      title:'Login',
      use : 'loginModalWindow'
    };
    $scope.registerModalWindow = {
      html: '<form class="registerForm" ng-submit="submit()" ng-controller="registerModalWindow"> <div class="animate-hide register-basic" ng-hide="hideLevelAuthority"> <br/> <label for="usernameText">Username</label> <input type="text" ng-model="newuser.username" id="usernameText" placeholder="Username"/> <br/> <label for="emailAddressEmail">Email Address</label> <input type="email" ng-model="newuser.email" id="emailAddressEmail" placeholder="Email Address"/> <br/> <label for="passwordPassword">Password</label> <input type="password" ng-model="newuser.password" id="passwordPassword" placeholder="Password"/> <br/> <label for="passwordPassword2">Password</label> <input type="password" ng-model="newuser.password2" id="passwordPassword2" placeholder="Password"/> <br/> <input type="submit" value="Submit"/> </div></form>',
      title:'Register',
      use : 'registerModalWindow'
    };
    $scope.forgotResetModalWindow = {
      html: '<form ng-submit="submit()" ng-controller="forgotResetModalWindow"><md-prev ng-click="login()"></md-prev><span >Username:</span><br /><input type="text" placeholder="Username"/><br/>Or<br/><span >Email:</span><br /><input type="email" placeholder="Email Address"/><br /><br /><input type="submit" value="Submit"/></form>',
      title:'Reset your password',
      use : 'forgotResetModalWindow'
    };
    $scope.projectNewModalWindow = {
      html: '<form ng-submit="submit()" ng-controller="projectNewModalWindow"> <fieldset> <legend>Start a project</legend> <label for="title">Title</label> <br/> <input ng-model="project.title" id="title" type="text" name="title" placeholder="Project name"/> <br/> <br/> <input type="file" id="siofu_input"/> <br/> <br/> <label for="description">Description</label> <br/> <textarea ng-model="project.description" id="description" name="description" rows="15" placeholder="Project description"></textarea> <br/> <br/> <input type="submit" value="Submit"/> </fieldset></form>',
      title:'Start a project',
      use : 'projectNewModalWindow'
    };

};
/*
 _____           _           _       
|  __ \         (_)         | |      
| |__) | __ ___  _  ___  ___| |_ ___ 
|  ___/ '__/ _ \| |/ _ \/ __| __/ __|
| |   | | | (_) | |  __/ (__| |_\__ \
|_|   |_|  \___/| |\___|\___|\__|___/
               _/ |                  
              |__/                   
*/
controllers.adminDashboard = function ($scope, $window, socket) {

};
controllers.creativeDashboard = function ($scope, $window, socket) {

};

controllers.mentorDashboard = function ($scope, $window, socket) {

};
controllers.error = function ($scope, $window, socket) {
  socket.emit('public', 'request error');
  socket.on('public', 'recieve error',function(data) {
    $scope.loginpage = data.loginpage;
    $scope.$digest();
  });
};

//search up prototype chain
app.controller(controllers);